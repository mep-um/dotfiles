[init]
	templatedir = ~/.git_template
[push]
	default = current
[color]
	ui = auto
[alias]
	aa = add --all
	ap = add --patch
	branches = for-each-ref --sort=-committerdate --format=\"%(color:blue)%(authordate:relative)\t%(color:red)%(authorname)\t%(color:white)%(color:bold)%(refname:short)\" refs/remotes
	ci = commit -v
	co = checkout
	st = status
	s = status -s
	lg = log --oneline --decorate --all --graph
	# Rebase current branch against develop
    	frb = "!f() { \
        	BRANCH=`git rev-parse --abbrev-ref HEAD` && \
        	git checkout develop && \
        	git pull --rebase=preserve && \
        	git checkout \"$BRANCH\" && \
        	git pull --rebase=preserve && \
        	git merge develop && \
        	git push origin \"$BRANCH\" && \
        	git rebase -i develop --preserve-merges && \
        	git push --force origin \"$BRANCH\"; \
    	}; f"
[core]
	excludesfile = ~/.gitignore
	autocrlf = input
[merge]
	ff = only
[commit]
	template = ~/.gitmessage
[fetch]
	prune = true
[rebase]
	autosquash = true
[include]
	path = ~/.gitconfig.local
[pull]
	rebase = true
